import{_ as e,c as s,o as n,d as a}from"./app.5afdac1a.js";const g=JSON.parse('{"title":"Vue 项目默认模板","description":"","frontmatter":{},"headers":[{"level":2,"title":"技术栈","slug":"技术栈","link":"#技术栈","children":[]},{"level":2,"title":"开箱即用","slug":"开箱即用","link":"#开箱即用","children":[]},{"level":2,"title":"安装使用","slug":"安装使用","link":"#安装使用","children":[]},{"level":2,"title":"项目目录","slug":"项目目录","link":"#项目目录","children":[]},{"level":2,"title":"开发建议","slug":"开发建议","link":"#开发建议","children":[]},{"level":2,"title":"注意事项","slug":"注意事项","link":"#注意事项","children":[]}],"relativePath":"front-base/xmov-cli/tmpls/vue.md"}'),l={name:"front-base/xmov-cli/tmpls/vue.md"},t=a(`<h1 id="vue-项目默认模板" tabindex="-1">Vue 项目默认模板 <a class="header-anchor" href="#vue-项目默认模板" aria-hidden="true">#</a></h1><h2 id="技术栈" tabindex="-1">技术栈 <a class="header-anchor" href="#技术栈" aria-hidden="true">#</a></h2><ul><li><p>✨ <a href="https://cn.vitejs.dev/guide/" target="_blank" rel="noreferrer">构建工具：高效、快速的 Vite</a></p></li><li><p>🔥 <a href="https://github.com/vuejs/rfcs/pull/227" target="_blank" rel="noreferrer">前端框架：最时髦的 Vue3，使用新的 <code>&lt;script setup&gt;</code> 语法</a></p></li><li><p>🏆 <a href="https://www.typescriptlang.org/" target="_blank" rel="noreferrer">开发语言：政治正确 TypeScript</a></p></li><li><p>🍍 <a href="https://pinia.esm.dev/" target="_blank" rel="noreferrer">状态管理器：Vue3 新秀 Pinia</a></p></li><li><p>🎨 <a href="https://cn.windicss.org/guide/" target="_blank" rel="noreferrer">样式：原子化 Windi CSS</a></p></li><li><p>🚏 <a href="https://github.com/vuejs/vue-router" target="_blank" rel="noreferrer">路由管理：Vue Router</a></p></li><li><p>🎉 <a href="https://www.antdv.com/components/overview-cn/" target="_blank" rel="noreferrer">UI 组件库：Ant Design Vue</a></p></li><li><p>🚀 <a href="https://github.com/antfu/vueuse" target="_blank" rel="noreferrer">工具库：VueUse 实用的 Composition API 工具合集 </a></p></li></ul><h2 id="开箱即用" tabindex="-1">开箱即用 <a class="header-anchor" href="#开箱即用" aria-hidden="true">#</a></h2><ul><li><p>📥 <a href="https://github.com/antfu/unplugin-auto-import" target="_blank" rel="noreferrer">组合式 Composition API 自动加载：unplugin-auto-import</a></p></li><li><p>📦 <a href="https://github.com/antfu/unplugin-vue-components" target="_blank" rel="noreferrer">组件自动化加载：unplugin-vue-components</a></p></li><li><p>📡 <a href="https://git.xmov.ai/frontend/template-vue-default/blob/master/src/service/index.ts" target="_blank" rel="noreferrer">统一封装的网络请求：Axios + Hooks</a></p></li><li><p>🍀 <a href="https://git.xmov.ai/frontend/template-vue-default/tree/master/src/components/SvgIcon.vue" target="_blank" rel="noreferrer">图标组件：Svg Icon</a></p></li><li><p>🗂 <a href="https://git.xmov.ai/frontend/template-vue-default/tree/master/src/pages" target="_blank" rel="noreferrer">基于文件的路由：vite-plugin-pages</a></p></li><li><p>🗺 <a href="https://git.xmov.ai/frontend/template-vue-default/tree/master/src/layout" target="_blank" rel="noreferrer">布局系统：vite-plugin-vue-layouts</a></p></li><li><p>📐 <a href="https://git.xmov.ai/frontend/template-vue-default/blob/master/.eslintrc.js" target="_blank" rel="noreferrer">编码风格规范：ESLint、Prettier、VSCode Settings</a></p></li><li><p>🚦 <a href="https://git.xmov.ai/frontend/template-vue-default/blob/master/.commitlintrc.json" target="_blank" rel="noreferrer">代码提交规范：husky、Commitlint、lint-staged</a></p></li></ul><h2 id="安装使用" tabindex="-1">安装使用 <a class="header-anchor" href="#安装使用" aria-hidden="true">#</a></h2><ol><li><code>git clone git@git.xmov.ai:frontend/template-vue-default.git my-app</code></li><li><code>cd my-app</code></li><li><code>yarn</code></li><li><code>yarn run dev</code></li></ol><h2 id="项目目录" tabindex="-1">项目目录 <a class="header-anchor" href="#项目目录" aria-hidden="true">#</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">├── .husky                              // husky git hooks 配置目录</span></span>
<span class="line"><span style="color:#A6ACCD;">    ├── _                               // husky 脚本生成的目录文件</span></span>
<span class="line"><span style="color:#A6ACCD;">    ├── commit-msg                      // commit-msg 钩子，用于验证 message 格式</span></span>
<span class="line"><span style="color:#A6ACCD;">    ├── pre-commit                      // pre-commit 钩子，主要是和 eslint 配合</span></span>
<span class="line"><span style="color:#A6ACCD;">├── env                                 // 环境变量文件夹</span></span>
<span class="line"><span style="color:#A6ACCD;">├── public                              // vite 项目下的静态目录</span></span>
<span class="line"><span style="color:#A6ACCD;">    ├── config.js                     	// 项目配置，私有化部署时使用</span></span>
<span class="line"><span style="color:#A6ACCD;">├── dist                                // 默认的 build 输出目录</span></span>
<span class="line"><span style="color:#A6ACCD;">└── src                                 // 源码目录</span></span>
<span class="line"><span style="color:#A6ACCD;">    ├── api                             // 接口相关</span></span>
<span class="line"><span style="color:#A6ACCD;">    ├── assets                          // 公共的文件（如 image、css、font 等）</span></span>
<span class="line"><span style="color:#A6ACCD;">    ├── components                      // 项目全局组件</span></span>
<span class="line"><span style="color:#A6ACCD;">    ├── hooks                           // 自定义的全局 hooks</span></span>
<span class="line"><span style="color:#A6ACCD;">    ├── layouts                         // 项目页面布局</span></span>
<span class="line"><span style="color:#A6ACCD;">    ├── pages                           // 页面模块目录</span></span>
<span class="line"><span style="color:#A6ACCD;">        ├── login                       // login 页面模块</span></span>
<span class="line"><span style="color:#A6ACCD;">        ├── [...all].vue                // 404 页面</span></span>
<span class="line"><span style="color:#A6ACCD;">        ├── ...</span></span>
<span class="line"><span style="color:#A6ACCD;">    ├── router                          // 路由</span></span>
<span class="line"><span style="color:#A6ACCD;">    ├── service                         // 网络请求</span></span>
<span class="line"><span style="color:#A6ACCD;">    ├── store                           // 状态管理</span></span>
<span class="line"><span style="color:#A6ACCD;">    ├── typings                         // 项目 type 类型定义文件夹</span></span>
<span class="line"><span style="color:#A6ACCD;">        ├── auto-imports.d.ts           // unplugin-auto-import 插件生成</span></span>
<span class="line"><span style="color:#A6ACCD;">        ├── components.d.d.ts           // unplugin-vue-components 插件生成</span></span>
<span class="line"><span style="color:#A6ACCD;">    ├── utils                           // 工具库</span></span>
<span class="line"><span style="color:#A6ACCD;">    ├── App.vue                         // vue 顶层文件</span></span>
<span class="line"><span style="color:#A6ACCD;">    ├── main.ts                         // 项目入口文件</span></span>
<span class="line"><span style="color:#A6ACCD;">    ├── env.d.ts                        // 用户自定义环境变量的 ts 智能提示</span></span>
<span class="line"><span style="color:#A6ACCD;">├── .commitlintrc.json                  // commitlint 配置</span></span>
<span class="line"><span style="color:#A6ACCD;">├── .editorconfig                       // IDE 格式规范</span></span>
<span class="line"><span style="color:#A6ACCD;">├── .eslintignore                       // eslint 忽略</span></span>
<span class="line"><span style="color:#A6ACCD;">├── .eslintrc.js                        // eslint 配置文件</span></span>
<span class="line"><span style="color:#A6ACCD;">├── .gitignore                          // git 忽略</span></span>
<span class="line"><span style="color:#A6ACCD;">├── .prettierrc                         // prettierc 配置文件</span></span>
<span class="line"><span style="color:#A6ACCD;">├── index.html                          // 入口文件</span></span>
<span class="line"><span style="color:#A6ACCD;">├── package.json                        // package</span></span>
<span class="line"><span style="color:#A6ACCD;">├── README.md                           // README</span></span>
<span class="line"><span style="color:#A6ACCD;">├── stats.html                          // 包可视化分析文件</span></span>
<span class="line"><span style="color:#A6ACCD;">├── tsconfig.json                       // typescript 配置文件</span></span>
<span class="line"><span style="color:#A6ACCD;">├── vite.config.ts                      // vite 配置文件</span></span>
<span class="line"><span style="color:#A6ACCD;">└── windi.config.ts                     // windi css 配置文件</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="开发建议" tabindex="-1">开发建议 <a class="header-anchor" href="#开发建议" aria-hidden="true">#</a></h2><p><strong>👍 推荐使用 Composition API 的 <a href="https://github.com/vuejs/rfcs/pull/227" target="_blank" rel="noreferrer"><code>&lt;script setup&gt;</code> SFC 语法</a></strong></p><p>本项目统一采用 Composition API 的开发模式，弱化 vue 模板式编程体验，使单文件组件写法更接近函数式编程。</p><p><code>setup</code> 的 SFC 语法相比于普通的 <code>&lt;script&gt;</code> 语法，vue 官方肯定了它的优势：</p><ul><li>更少的样板内容，更简洁的代码</li><li>能够使用纯 Typescript 声明 props 和抛出事件</li><li>更好的运行时性能 （其模板会被编译成与其同一作用域的渲染函数，没有任何的中间代理）</li><li>更好的 IDE 类型推断性能 （减少语言服务器从代码中抽离类型的工作）</li></ul><p><strong>👍 推荐安装 VScode 插件 Volar</strong></p><p>在 Vue2.x 项目中普遍使用的 <code>Vetur</code> 对 TS 的支持不太友好，因此 Vue3.x 开发推荐另外一个插件 <code>Volar</code>。</p><p>注意：<code>Volar</code> 和 <code>Vetur</code> 同时使用会有冲突，使用 <code>Volar</code> 时要记得禁用 <code>Vetur</code>。</p><p><strong>👍 推荐优先使用原子化 Windi CSS 实现样式开发</strong></p><p>项目中页面与组件的样式，尽量全部用 <code>Windi CSS</code> 实现，同时推荐搭配安装 WindiCSS IntelliSense 插件，提高开发效率。</p><p>注意：项目安装了 <code>SCSS</code> 的预处理器，但请在原子化 CSS 很难实现的场景，再考虑使用 <code>SCSS</code> 语法。</p><h2 id="注意事项" tabindex="-1">注意事项 <a class="header-anchor" href="#注意事项" aria-hidden="true">#</a></h2><p><strong>📌 使用 <code>SvgIcon</code> 组件时，单色图标需要设计同学导出不带 <code>fill</code> 属性的 <code>svg</code> 图片才能实现自定义颜色</strong></p><ul><li>多色、渐变、毛玻璃等 <code>svg</code> 图片暂不支持自定义颜色，直接使用设计稿原图</li></ul>`,23),p=[t];function r(o,i,c,d,u,h){return n(),s("div",null,p)}const A=e(l,[["render",r]]);export{g as __pageData,A as default};
